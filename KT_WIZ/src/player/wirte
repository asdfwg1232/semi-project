	public void writeBatterplayerFile(String dir,String name,List<Batterplayer> playList)
			throws IOException, ClassNotFoundException, SQLException {
//		playList  = new ArrayList<Batterplayer>();
		String sql = "select * from batter";
		File outFile = new File(dir, name);
			try(Connection conn = PlayerConn.getConn2021();
				PreparedStatement pst = conn.prepareStatement(sql);
				ResultSet rs = pst.executeQuery();
				OutputStream out = new BufferedOutputStream(new FileOutputStream(outFile))){
				
				File information = new File(dir);
				
	
				if(!information.exists()) {
					information.mkdir();
				}
				if(outFile.exists()) {
					outFile.delete();
				}
				while(rs.next()) {
					playList.add(new Batterplayer(rs.getString("name"),
							rs.getInt("salary"),
							rs.getInt("deposit"),
							rs.getString("position"),
							rs.getInt("number"),
							rs.getDouble("avg"),
							rs.getInt("hr"),
							rs.getInt("sb")));
				}
//				out = new BufferedOutputStream(new FileOutputStream(outFile));
				for(int idx = 0; idx < playList.size()-2; idx++) {
					String writeStr = playList.get(idx).getName()+","+ playList.get(idx).getSalary()+","+
				playList.get(idx).getDeposit()+","+playList.get(idx).getPosition()+","+playList.get(idx).getNumber()+","+
							playList.get(idx).getAvg()+","+playList.get(idx).getHr()+","+playList.get(idx).getSb()+"\n";
				
				byte[] b = writeStr.getBytes();
				
				//파일에 해당 내용을 쓴다.
				out.write(b);
				}
			}
	}
	
	public void writePitcherplayerFile(String dir,String name,List<Pitcherplayer> playList)
			throws IOException, ClassNotFoundException, SQLException {
//		playList  = new ArrayList<Batterplayer>();
		String sql = "select * from batter";
		File outFile = new File(dir, name);
			try(Connection conn = PlayerConn.getConn2021();
				PreparedStatement pst = conn.prepareStatement(sql);
				ResultSet rs = pst.executeQuery();
				OutputStream out = new BufferedOutputStream(new FileOutputStream(outFile))){
				
				File information = new File(dir);
				
	
				if(!information.exists()) {
					information.mkdir();
				}
				if(outFile.exists()) {
					outFile.delete();
				}
				while(rs.next()) {
					playList.add(new Pitcherplayer(rs.getString("name"),
							rs.getInt("salary"),
							rs.getInt("deposit"),
							rs.getString("position"),
							rs.getInt("number"),
							rs.getDouble("era"),
							rs.getInt("phr"),
							rs.getInt("win"),
							rs.getInt("lose"),
							rs.getInt("sv")));
				}
//				out = new BufferedOutputStream(new FileOutputStream(outFile));
				for(int idx = 0; idx < playList.size()-2; idx++) {
					String writeStr = playList.get(idx).getName()+","+ playList.get(idx).getSalary()+","+
				playList.get(idx).getDeposit()+","+playList.get(idx).getPosition()+","+playList.get(idx).getNumber()+","+
							playList.get(idx).getEra()+","+playList.get(idx).getPhr()+","+playList.get(idx).getWin()+","+
				playList.get(idx).getLose()+","+playList.get(idx).getSv()+"\n";
				
				byte[] b = writeStr.getBytes();
				
				//파일에 해당 내용을 쓴다.
				out.write(b);
				}
			}
	}
	
}
